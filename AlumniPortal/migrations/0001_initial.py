# Generated by Django 5.2 on 2025-05-05 18:32

import AlumniPortal.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('ALUMNI', 'Alumni'), ('STUDENT', 'Student')], db_index=True, default='STUDENT', max_length=10)),
                ('gr_number', models.CharField(blank=True, db_index=True, help_text='College GR Number e.g 22UGCS21242', max_length=11, null=True)),
                ('phone_number', models.CharField(blank=True, help_text='Optional phone number (e.g., +91XXXXXXXXXX).', max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other'), ('PNTS', 'Prefer not to say')], max_length=10, null=True)),
                ('batch_year', models.PositiveIntegerField(blank=True, db_index=True, help_text='Year of graduation (e.g., 2020).', null=True, validators=[django.core.validators.MinValueValidator(1950), django.core.validators.MaxValueValidator(2030)])),
                ('department', models.CharField(blank=True, db_index=True, help_text='e.g., Computer Science, Mechanical', max_length=100)),
                ('current_job_title', models.CharField(blank=True, max_length=150)),
                ('company_name', models.CharField(blank=True, max_length=150)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, db_index=True, help_text='e.g., Pune, India', max_length=100)),
                ('linkedin_profile', models.URLField(blank=True, help_text='Optional link to your LinkedIn profile.', max_length=250)),
                ('achievements', models.TextField(blank=True, help_text='Highlight key achievements or contributions.')),
                ('skills', models.TextField(blank=True, help_text='List professional or technical skills (comma-separated or one per line).')),
                ('profile_photo', models.ImageField(blank=True, help_text='Upload a profile picture (Max 2MB, JPG/JPEG/PNG format).', null=True, upload_to='profile_pics/', validators=[AlumniPortal.models.validate_profile_photo_size, django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('bio', models.TextField(blank=True, help_text='A brief description about yourself, your journey, or interests.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The official name of the event.', max_length=200)),
                ('slug', models.SlugField(blank=True, help_text='A URL-friendly version of the title (auto-generated).', max_length=220, unique=True)),
                ('description', models.TextField(blank=True, help_text='Detailed information about the event.')),
                ('start_time', models.DateTimeField(db_index=True, help_text='Date and time when the event starts.')),
                ('end_time', models.DateTimeField(blank=True, db_index=True, help_text='Date and time when the event ends (optional).', null=True)),
                ('location', models.CharField(blank=True, help_text='Physical venue or online platform link.', max_length=255)),
                ('event_type', models.CharField(choices=[('NETWORKING', 'Networking'), ('WORKSHOP', 'Workshop'), ('SEMINAR', 'Seminar'), ('REUNION', 'Reunion'), ('WEBINAR', 'Webinar'), ('OTHER', 'Other')], db_index=True, default='OTHER', help_text='Category of the event.', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendees', models.ManyToManyField(blank=True, help_text='Users registered or attending the event.', related_name='attended_events', to=settings.AUTH_USER_MODEL)),
                ('organizer', models.ForeignKey(blank=True, help_text='User responsible for organizing the event (optional).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organized_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['start_time', 'title'],
            },
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The headline or title of the news article.', max_length=255)),
                ('slug', models.SlugField(blank=True, help_text='A URL-friendly version of the title (auto-generated if left blank).', max_length=255, unique=True)),
                ('content', models.TextField(help_text='The main body content of the news article.')),
                ('image', models.ImageField(blank=True, help_text='An optional image to accompany the article.', null=True, upload_to='news_article_images/')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], db_index=True, default='DRAFT', help_text='The current status of the article (e.g., Draft, Published).', max_length=10)),
                ('published_date', models.DateTimeField(blank=True, db_index=True, help_text='The date and time when the article was (or will be) published.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, help_text='The user who wrote this article (optional).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news_articles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'News Article',
                'verbose_name_plural': 'News Articles',
                'ordering': ['-published_date', '-created_at'],
            },
        ),
    ]
